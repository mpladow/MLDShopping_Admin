
@{
    @model MLDShopping_Admin.Models.ProductVM;
    var isNew = Model == null || Model.ProductId == 0;
    var title = isNew ? "New Product" : "Edit Product";
    var message = ViewData["message"];
    var messageType = ViewData["MessageType"];

}

@*<section class="content-header">
        <h1>
            @title
        </h1>
    </section>*@

<form role="form" method="post" enctype="multipart/form-data" asp-area="Products" asp-controller="Products" asp-action="Edit">
    <section class="content container-fluid">
        <div class="row mt-3">
            <div class="col-6">
                <div class="card card-primary">
                    <!-- /.card-header -->
                    <!-- form start -->
                    <div class="card-header">
                        <h3 class="card-title">General</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(message as string))
                        {
                            <div class="callout callout-@messageType alert-dismissible">
                                <p>@message</p>
                            </div>
                        }
                        @Html.HiddenFor(x => x.ProductId)
                        @if (!isNew)
                        {
                            <div class="form-group">
                                <label>Account Id</label>
                                <span class="form-control" id="ProductId">@Model.ProductId</span>
                            </div>
                        }
                        <div class="form-group">
                            <label asp-for="Name">Name</label>
                            <input asp-for="Name" class="form-control" id="Name" placeholder="Enter name" required>
                        </div>
                        <div class="form-group">
                            <label asp-for="ProductCode">Product Code</label>
                            <input asp-for="ProductCode" class="form-control" id="Name" placeholder="Enter product code" required>
                        </div>
                        <div class="form-group">
                            <label asp-for="Description1">Description One</label>
                            <input asp-for="Description1" type="text" class="form-control" id="Description1" placeholder="Enter Description One" required>
                        </div>
                        <div class="form-group">
                            <label asp-for="Description2">Description Two</label>
                            <input asp-for="Description2" type="text" class="form-control" id="Description2" placeholder="Enter Description Two" required>
                        </div>
                        <div class="form-group">
                            <div class="custom-control custom-switch">
                                <input asp-for="IsActive" type="checkbox" class="custom-control-input" id="Active">
                                <label asp-for="IsActive" class="custom-control-label" for="Active">Active product</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Category</label>
                            <select class="form-control" asp-for="CategoryId">
                            </select>
                        </div>
                    </div>
                    <!-- /.card-body -->

                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">@(isNew? "Submit" : "Save")</button>
                        <button type="button" class="btn btn-danger" onclick="window.location.href='@Url.Action("Delete", "Account", new { area="Admin", id = Model.ProductId})';">Delete</button>
                        @if (Model.ProductId > 0)
                        {
                            <button type="button" class="btn btn-default" onclick="window.location.href='@Url.Action("Edit", "Account", new { area="Admin", id= 0})';">New</button>
                        }
                    </div>
                </div>
            </div>
        </div>

    </section>
</form>
@section scripts {
    <!-- DataTables -->
    <script language="javascript">
        $(document).ready(function () {
            $('#PermissionIds').select2();

            $('#btnGeneratePassword').click(function (e) {

                let password = GeneratePassword(12, true);
                $('#Password').val(password);

            });
            GetCategoriesData();
            $("#CategoryId").change(function () {
                var deptid = $(this).val();
                GetCategoriesData();

            })
            function GeneratePassword(length, special) {
                var iteration = 0;
                var password = "";
                var randomNumber;
                if (special == undefined) {
                    var special = false;
                }
                while (iteration < length) {
                    randomNumber = (Math.floor((Math.random() * 100)) % 94) + 33;
                    if (!special) {
                        if ((randomNumber >= 33) && (randomNumber <= 47)) { continue; }
                        if ((randomNumber >= 58) && (randomNumber <= 64)) { continue; }
                        if ((randomNumber >= 91) && (randomNumber <= 96)) { continue; }
                        if ((randomNumber >= 123) && (randomNumber <= 126)) { continue; }
                    }
                    iteration++;
                    password += String.fromCharCode(randomNumber);
                }
                return password;
            };

        })
        function DisplayFilesToUpload() {
            // GET file from DOM
            let element = document.getElementById("UserImage");
            let files = element.files;
            for (var i = 0; i < files.length; i++) {
                let fileName = files[i].name + "(" + files[i].size + " bytes)";
                document.getElementById("UserImageLabel").innerHTML = fileName;

                // SET the display image to this image.
                //let imgData = getBase64Image(files[i]);
                SetPreviewImage(files[i]);
            }
        }

        function SetPreviewImage(file) {
            // define variables
            let preview = document.getElementById("imagePreview");
            preview.style.display = 'block';
            let src = window.URL.createObjectURL(file);
            console.log(src);
            localStorage.setItem("imagePreview", src);
            preview.src = src;
        }

        function GetCategoriesData() {
            $.ajax({
                type: "GET",
                url: "/products/products/getcategoriesdata",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    $.each(data, function () {
                        $("#CategoryId").append($("<option     />").val(this.Value).text(this.Text));
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }



    </script>


}